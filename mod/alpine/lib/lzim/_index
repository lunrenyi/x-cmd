

# xal-go    ==> xal --image  ==> xal =go

# Not an obvious optimization
___x_cmd_alpine_lzim(){
    [ $# -gt 0 ]    ||  set -- --help

    local op="$1";  shift
    case "$op" in
        -h|--help)          ___x_cmd help -m alpine lzim    "$@" ;;

        prepare|prepare_|ls|\
        prepareall)
                            ___x_cmd_alpine_lzim_"$op"      "$@" ;;

        *)                  N=alpine M="Unsupported cmd -> $op" log:ret:64
    esac
}

___x_cmd_alpine_lzim_prepare(){
    local x_=""
    ___x_cmd_alpine_lzim_prepare_ "$@" || return $?
    printf "%s\n" "$x_"
}

___x_cmd_alpine_lzim_prepare_(){
    local name="$1"

    case "$name" in
        pixi)   set --   --from xal-base    --to xal-pixi       xbin.sh     ___x_cmdexe pixi --install  ;;
        gcc)    set --   --from xal-base    --to xal-gcc        --apk gcc                   ;;
        go)     set --   --from xal-base    --to xal-go         --apk go                    ;;
        rust)   set --   --from xal-base    --to xal-rust       --apk cargo                 ;;
        py)     set --   --from xal-base    --to xal-py         --apk py3-pip               ;;
        jdk)    set --   --from xal-base    --to xal-jdk        --apk openjdk21             ;;
        node)   set --   --from xal-base    --to xal-node       --apk npm                   ;;
        deno)   set --   --from xal-base    --to xal-deno       --apk deno                  ;;

        *)      N=alpine M="Unknown name -> $name"              log:ret:64
    esac

    ___x_cmd alpine refit "$@"
}

___x_cmd_alpine_lzim_ls(){
    printf "%s\n"   pixi    gcc go rust     py  jdk     node deno
}

___x_cmd_alpine_lzim_prepareall(){
    local ___x_cmd_exitcode=""

    local IFS=' '
    local sys=""
    ex:init alpha
    for sys in pixi    gcc go rust     py  jdk     node deno; do
        ___x_cmd_alpine_lzim_prepare_ "$sys";   ex:save;    ex:ret:if-int;      ex:ret:if-err;
    done
}
